version: '3.8'

services:
  vennekredsen:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vennekredsen-hjemmeside-dev
    restart: unless-stopped
    ports:
      - "85:80"  # Same port as production
    volumes:
      - ./frontend/html:/usr/share/nginx/html:ro  # Live reload for development
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - vennekredsen_dev_net
    depends_on:
      - api

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: vennekredsen-api-dev
    restart: unless-stopped
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development  # Development instead of production
      - FLASK_DEBUG=1          # Enable debug for development
      - POSTGRES_DB=${POSTGRES_DB:-vennekredsen_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret_change_in_production}
      - INTERNAL_TOKEN=${INTERNAL_TOKEN:-dev_internal_token}
      - PYTHONUNBUFFERED=1
    ports:
      - "5000:5000"  # Expose API port for development access
    volumes:
      - ./api:/app  # Live code reloading
      - /app/__pycache__  # Exclude pycache
    networks:
      - vennekredsen_dev_net
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: vennekredsen-db-dev
    image: postgres:15  # Use specific version like production
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vennekredsen_dev}
      POSTGRES_USER: ${POSTGRES_USER:-dev_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
    ports:
      - "5432:5432"
    volumes:
      - db_dev_data:/var/lib/postgresql/data
      - ./api/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - vennekredsen_dev_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dev_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development-only services (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vennekredsen-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@dev.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-dev_admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - vennekredsen_dev_net
    profiles:
      - tools  # Start with: docker-compose --profile tools up

networks:
  vennekredsen_dev_net:
    driver: bridge

volumes:
  db_dev_data:
    name: vennekredsen_db_dev_data
  pgadmin_dev_data:
    name: vennekredsen_pgadmin_dev_data